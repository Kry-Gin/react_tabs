{"version":3,"sources":["components/Tabs/Tabs.tsx","App.tsx","index.tsx"],"names":["Tabs","tabs","onTabSelected","selectedTabID","currentTab","find","tab","id","className","map","href","onClick","handleTabSelection","title","content","App","useState","setSelectedTabID","selectedTab","ReactDOM","render","document","getElementById"],"mappings":"iMAQaA,EAAwB,SAAC,GAI/B,IAHLC,EAGI,EAHJA,KACAC,EAEI,EAFJA,cACAC,EACI,EADJA,cAQMC,EAAaH,EAAKI,MAAK,SAAAC,GAAG,OAAIA,EAAIC,KAAOJ,MAAkBF,EAAK,GAEtE,OACE,sBAAK,UAAQ,gBAAb,UACE,qBAAKO,UAAU,gBAAf,SACE,6BACGP,EAAKQ,KAAI,SAAAH,GAAG,OACX,oBACEE,UAAWL,IAAkBG,EAAIC,GAAK,YAAc,GACpD,UAAQ,MAFV,SAKE,mBACEG,KAAI,WAAMJ,EAAIC,IACd,UAAQ,UACRI,QAAS,kBArBI,SAACL,GACtBH,IAAkBG,EAAIC,IACxBL,EAAcI,GAmBWM,CAAmBN,IAHpC,SAKGA,EAAIO,SAPFP,EAAIC,WAcjB,qBAAKC,UAAU,QAAQ,UAAQ,aAA/B,SACGJ,EAAWU,cCpCPb,EAAO,CAClB,CAAEM,GAAI,QAASM,MAAO,QAASC,QAAS,eACxC,CAAEP,GAAI,QAASM,MAAO,QAASC,QAAS,eACxC,CAAEP,GAAI,QAASM,MAAO,QAASC,QAAS,gBAG7BC,EAAgB,WAC3B,MAA0CC,mBAASf,EAAK,GAAGM,IAA3D,mBAAOJ,EAAP,KAAsBc,EAAtB,KACMC,EAAcjB,EAAKI,MAAK,SAAAC,GAAG,OAAIA,EAAIC,KAAOJ,MAAkBF,EAAK,GAGvE,OACE,sBAAKO,UAAU,UAAf,UACE,oBAAIA,UAAU,QAAd,mCACsBU,EAAYL,SAGlC,cAAC,EAAD,CACEZ,KAAMA,EACNC,cAVgB,SAACI,GAAD,OAAcW,EAAiBX,EAAIC,KAWnDJ,cAAeA,QCzBvBgB,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.581f85e3.chunk.js","sourcesContent":["import { Tab } from '../../types/tab';\n\ntype Props = {\n  tabs: Tab[],\n  onTabSelected: (tab: Tab) => void,\n  selectedTabID: string,\n};\n\nexport const Tabs: React.FC<Props> = ({\n  tabs,\n  onTabSelected,\n  selectedTabID,\n}) => {\n  const handleTabSelection = (tab: Tab) => {\n    if (selectedTabID !== tab.id) {\n      onTabSelected(tab);\n    }\n  };\n\n  const currentTab = tabs.find(tab => tab.id === selectedTabID) || tabs[0];\n\n  return (\n    <div data-cy=\"TabsComponent\">\n      <div className=\"tabs is-boxed\">\n        <ul>\n          {tabs.map(tab => (\n            <li\n              className={selectedTabID === tab.id ? 'is-active' : ''}\n              data-cy=\"Tab\"\n              key={tab.id}\n            >\n              <a\n                href={`#${tab.id}`}\n                data-cy=\"TabLink\"\n                onClick={() => handleTabSelection(tab)}\n              >\n                {tab.title}\n              </a>\n            </li>\n          ))}\n        </ul>\n      </div>\n\n      <div className=\"block\" data-cy=\"TabContent\">\n        {currentTab.content}\n      </div>\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\n\nimport { Tabs } from './components/Tabs';\nimport { Tab } from './types/tab';\n\nexport const tabs = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\nexport const App: React.FC = () => {\n  const [selectedTabID, setSelectedTabID] = useState(tabs[0].id);\n  const selectedTab = tabs.find(tab => tab.id === selectedTabID) || tabs[0];\n  const onTabSelected = (tab: Tab) => setSelectedTabID(tab.id);\n\n  return (\n    <div className=\"section\">\n      <h1 className=\"title\">\n        {`Selected tab is ${selectedTab.title}`}\n      </h1>\n\n      <Tabs\n        tabs={tabs}\n        onTabSelected={onTabSelected}\n        selectedTabID={selectedTabID}\n      />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}